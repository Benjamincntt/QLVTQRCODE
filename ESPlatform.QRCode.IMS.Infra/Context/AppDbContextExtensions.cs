using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESPlatform.QRCode.IMS.Infra.Context;

[SuppressMessage("Performance", "CA1822:Mark members as static")]
public partial class AppDbContext {
	private static readonly ValueConverter<DateTime, DateTime> SqlServerDateTimeConverter = new(toDt => toDt.ToUniversalTime(), fromDt => fromDt.ToLocalTime());

	partial void OnModelCreatingPartial(ModelBuilder modelBuilder) {
		var propList = modelBuilder.Model.GetEntityTypes().SelectMany(t => t.GetProperties()).ToList();

		// All DateTime/DateTime? fields will be converted to UTC before save to database and convert to Local after read from database
		propList.Where(p => p.ClrType == typeof(DateTime) || p.ClrType == typeof(DateTime?)).ToList()
				.ForEach(p => p.SetValueConverter(SqlServerDateTimeConverter));

		// All fields have names start with "_" will be set to readonly
		propList.Where(p => p.GetColumnName().StartsWith("_")).ToList()
				.ForEach(p => {
					 p.ValueGenerated = ValueGenerated.OnAddOrUpdate;
					 p.SetBeforeSaveBehavior(PropertySaveBehavior.Ignore);
				 });

		// All Guid & string fields in primary keys will be set to NOT generated by database
		propList.Where(p => p.IsPrimaryKey())
				.Where(p => p.ClrType == typeof(Guid) || p.ClrType == typeof(Guid?) || p.ClrType == typeof(string)).ToList()
				.ForEach(p => { p.ValueGenerated = ValueGenerated.Never; });
	}

	protected override void ConfigureConventions(ModelConfigurationBuilder configurationBuilder) { }
}
